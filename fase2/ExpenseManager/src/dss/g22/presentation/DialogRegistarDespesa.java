/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dss.g22.presentation;

import java.awt.CardLayout;

/**
 *
 * @author joao
 */
public class DialogRegistarDespesa extends javax.swing.JDialog {
    private String cartaoAnterior = null;
    private String cartaoAtual = "painelNomeDescPeriod";
    
    /**
     * Creates new form DialogRegistarDespesa
     */
    public DialogRegistarDespesa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        iconeDespesa = new javax.swing.JLabel();
        painelCartoes = new javax.swing.JPanel();
        painelNomeDescPeriod = new javax.swing.JPanel();
        labelNomeDespesa = new javax.swing.JLabel();
        campoNomeDespesa = new javax.swing.JTextField();
        labelErroNomeObrigatorio = new javax.swing.JLabel();
        labelDescricaoDespesa = new javax.swing.JLabel();
        scrollDescricaoDespesa = new javax.swing.JScrollPane();
        areaTextoDescricao = new javax.swing.JTextArea();
        opcoesPeriodicidade = new javax.swing.JComboBox<>();
        labelOcorre = new javax.swing.JLabel();
        painelMetodoDivisaoPorOmissao = new javax.swing.JPanel();
        selecionadorPrimeiraData = new com.github.lgooddatepicker.components.DatePicker();
        labelDivisaoPorOmissao = new javax.swing.JLabel();
        labelPrimeiraDataPagamento = new javax.swing.JLabel();
        metodosDivisaoOmissao = new javax.swing.JComboBox<>();
        painelMetodosDivisaoOmissao = new javax.swing.JPanel();
        painelMetodoIgualOmissao = new javax.swing.JPanel();
        scrollMetodoIgualOmissao = new javax.swing.JScrollPane();
        tabelaMetodoIgualOmissao = new javax.swing.JTable();
        labelErroMetodoIgualOmissao = new javax.swing.JLabel();
        painelMetodoPercentagensOmissao = new javax.swing.JPanel();
        scrollPercentagensOmissao = new javax.swing.JScrollPane();
        tabelaPercentagensOmissao = new javax.swing.JTable();
        painelErrosPercentagensOmissao = new javax.swing.JPanel();
        erroTotalPercentagensOmissao = new javax.swing.JLabel();
        erroPercentagemNegativaOmissao = new javax.swing.JLabel();
        painelPercentagemTotalOmissao = new javax.swing.JPanel();
        labelPercentagemTotalOmissao = new javax.swing.JLabel();
        labelValorPercentagemTotalOmissao = new javax.swing.JLabel();
        labelCaraterPercentagemOmissao = new javax.swing.JLabel();
        scrollDadosFatura = new javax.swing.JScrollPane();
        painelDadosFatura = new javax.swing.JPanel();
        labelDataPagamento = new javax.swing.JLabel();
        selecionadorData = new com.github.lgooddatepicker.components.DatePicker();
        labelErroSemDataPagamento = new javax.swing.JLabel();
        labelQuantoPagouCada = new javax.swing.JLabel();
        painelComoFoiPago = new javax.swing.JPanel();
        scrollComoFoiPago = new javax.swing.JScrollPane();
        tabelaComoFoiPago = new javax.swing.JTable();
        painelTotalPago = new javax.swing.JPanel();
        labelTotalPago = new javax.swing.JLabel();
        labelResultadoTotalPago = new javax.swing.JLabel();
        painelErrosTotalPago = new javax.swing.JPanel();
        erroMontanteNegativo = new javax.swing.JLabel();
        erroTotalNulo = new javax.swing.JLabel();
        labelComoDividir = new javax.swing.JLabel();
        metodosDivisao = new javax.swing.JComboBox<>();
        painelMetodosDivisao = new javax.swing.JPanel();
        painelMetodoIgual = new javax.swing.JPanel();
        scrollMetodoIgual = new javax.swing.JScrollPane();
        tabelaMetodoIgual = new javax.swing.JTable();
        labelErroMetodoIgual = new javax.swing.JLabel();
        painelMetodoDesigual = new javax.swing.JPanel();
        scrollMetodoDesigual = new javax.swing.JScrollPane();
        tabelaMetodoDesigual = new javax.swing.JTable();
        painelTotalMetodoDesigual = new javax.swing.JPanel();
        labelTotalPagar = new javax.swing.JLabel();
        labelResultadoTotalPagar = new javax.swing.JLabel();
        painelErrosMetodoDesigual = new javax.swing.JPanel();
        erroMontanteNaoNegativo = new javax.swing.JLabel();
        erroTotaisDiferem = new javax.swing.JLabel();
        painelMetodoPercentagens = new javax.swing.JPanel();
        scrollPercentagens = new javax.swing.JScrollPane();
        tabelaPercentagens = new javax.swing.JTable();
        painelErrosPercentagens = new javax.swing.JPanel();
        erroTotalPercentagens = new javax.swing.JLabel();
        erroPercentagemNegativa = new javax.swing.JLabel();
        painelPercentagemTotal = new javax.swing.JPanel();
        labelPercentagemTotal = new javax.swing.JLabel();
        labelValorPercentagemTotal = new javax.swing.JLabel();
        labelCaraterPercentagem = new javax.swing.JLabel();
        painelBotoes = new javax.swing.JPanel();
        botaoCancelar = new javax.swing.JButton();
        botaoAnterior = new javax.swing.JButton();
        botaoSeguinte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registar despesa");
        setMinimumSize(new java.awt.Dimension(455, 500));
        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setName("registarDespesa"); // NOI18N
        setPreferredSize(new java.awt.Dimension(455, 500));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        iconeDespesa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dss/g22/presentation/images/ExpenseIcon.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 10, 0);
        getContentPane().add(iconeDespesa, gridBagConstraints);

        painelCartoes.setLayout(new java.awt.CardLayout());

        painelNomeDescPeriod.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painelNomeDescPeriod.setLayout(new java.awt.GridBagLayout());

        labelNomeDespesa.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 6, 0, 0);
        painelNomeDescPeriod.add(labelNomeDespesa, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        painelNomeDescPeriod.add(campoNomeDespesa, gridBagConstraints);

        labelErroNomeObrigatorio.setForeground(new java.awt.Color(255, 0, 0));
        labelErroNomeObrigatorio.setText("A despesa tem de ter um nome.");
        labelErroNomeObrigatorio.setOpaque(true);
        labelErroNomeObrigatorio.setVisible(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        painelNomeDescPeriod.add(labelErroNomeObrigatorio, gridBagConstraints);

        labelDescricaoDespesa.setText("Descrição:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        painelNomeDescPeriod.add(labelDescricaoDespesa, gridBagConstraints);

        areaTextoDescricao.setColumns(30);
        areaTextoDescricao.setLineWrap(true);
        areaTextoDescricao.setRows(6);
        areaTextoDescricao.setTabSize(4);
        areaTextoDescricao.setWrapStyleWord(true);
        scrollDescricaoDespesa.setViewportView(areaTextoDescricao);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 6, 0, 4);
        painelNomeDescPeriod.add(scrollDescricaoDespesa, gridBagConstraints);

        opcoesPeriodicidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pontualmente", "Diariamente", "Semanalmente", "Quinzenalmente", "Mensalmente" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 1, 10, 0);
        painelNomeDescPeriod.add(opcoesPeriodicidade, gridBagConstraints);

        labelOcorre.setText("Ocorre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        painelNomeDescPeriod.add(labelOcorre, gridBagConstraints);

        painelCartoes.add(painelNomeDescPeriod, "painelNomeDescPeriod");

        painelMetodoDivisaoPorOmissao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painelMetodoDivisaoPorOmissao.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 6, 0, 0);
        painelMetodoDivisaoPorOmissao.add(selecionadorPrimeiraData, gridBagConstraints);

        labelDivisaoPorOmissao.setText("Por omissão, como deve ser dividido o valor da cada fatura?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        painelMetodoDivisaoPorOmissao.add(labelDivisaoPorOmissao, gridBagConstraints);

        labelPrimeiraDataPagamento.setText("Data da primeira fatura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        painelMetodoDivisaoPorOmissao.add(labelPrimeiraDataPagamento, gridBagConstraints);

        metodosDivisaoOmissao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Igualmente", "Por percentagens" }));
        metodosDivisaoOmissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodosDivisaoOmissaoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 1, 0, 0);
        painelMetodoDivisaoPorOmissao.add(metodosDivisaoOmissao, gridBagConstraints);

        painelMetodosDivisaoOmissao.setLayout(new java.awt.CardLayout());

        painelMetodoIgualOmissao.setLayout(new java.awt.GridBagLayout());

        scrollMetodoIgualOmissao.setPreferredSize(new java.awt.Dimension(382, 10));

        tabelaMetodoIgualOmissao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Morador", "Participa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaMetodoIgualOmissao.setColumnSelectionAllowed(true);
        tabelaMetodoIgualOmissao.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollMetodoIgualOmissao.setViewportView(tabelaMetodoIgualOmissao);
        tabelaMetodoIgualOmissao.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        painelMetodoIgualOmissao.add(scrollMetodoIgualOmissao, gridBagConstraints);

        labelErroMetodoIgualOmissao.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        labelErroMetodoIgualOmissao.setForeground(new java.awt.Color(255, 0, 0));
        labelErroMetodoIgualOmissao.setText("Deve selecionar pelo menos um morador.");
        labelErroMetodoIgualOmissao.setVisible(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        painelMetodoIgualOmissao.add(labelErroMetodoIgualOmissao, gridBagConstraints);

        painelMetodosDivisaoOmissao.add(painelMetodoIgualOmissao, "painelMetodoIgual");

        painelMetodoPercentagensOmissao.setLayout(new java.awt.GridBagLayout());

        scrollPercentagensOmissao.setPreferredSize(new java.awt.Dimension(382, 100));

        tabelaPercentagensOmissao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Morador", "Percentagem (%)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPercentagensOmissao.setColumnSelectionAllowed(true);
        tabelaPercentagensOmissao.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPercentagensOmissao.setViewportView(tabelaPercentagensOmissao);
        tabelaPercentagensOmissao.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        painelMetodoPercentagensOmissao.add(scrollPercentagensOmissao, gridBagConstraints);

        painelErrosPercentagensOmissao.setLayout(new javax.swing.OverlayLayout(painelErrosPercentagensOmissao));

        erroTotalPercentagensOmissao.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        erroTotalPercentagensOmissao.setForeground(new java.awt.Color(255, 0, 0));
        erroTotalPercentagensOmissao.setText("O total tem de ser 100%.");
        erroTotalPercentagensOmissao.setVisible(false);
        painelErrosPercentagensOmissao.add(erroTotalPercentagensOmissao);

        erroPercentagemNegativaOmissao.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        erroPercentagemNegativaOmissao.setForeground(new java.awt.Color(255, 0, 0));
        erroPercentagemNegativaOmissao.setText("As percentagens devem ser não negativas.");
        erroPercentagemNegativaOmissao.setVisible(false);
        painelErrosPercentagensOmissao.add(erroPercentagemNegativaOmissao);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        painelMetodoPercentagensOmissao.add(painelErrosPercentagensOmissao, gridBagConstraints);

        painelPercentagemTotalOmissao.setLayout(new java.awt.GridBagLayout());

        labelPercentagemTotalOmissao.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        labelPercentagemTotalOmissao.setText("Total: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        painelPercentagemTotalOmissao.add(labelPercentagemTotalOmissao, gridBagConstraints);

        labelValorPercentagemTotalOmissao.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        painelPercentagemTotalOmissao.add(labelValorPercentagemTotalOmissao, gridBagConstraints);

        labelCaraterPercentagemOmissao.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        painelPercentagemTotalOmissao.add(labelCaraterPercentagemOmissao, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        painelMetodoPercentagensOmissao.add(painelPercentagemTotalOmissao, gridBagConstraints);

        painelMetodosDivisaoOmissao.add(painelMetodoPercentagensOmissao, "painelMetodoPercentagens");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        painelMetodoDivisaoPorOmissao.add(painelMetodosDivisaoOmissao, gridBagConstraints);

        painelCartoes.add(painelMetodoDivisaoPorOmissao, "painelMetodoDivisaoPorOmissao");

        scrollDadosFatura.setToolTipText("");
        scrollDadosFatura.setPreferredSize(new java.awt.Dimension(425, 173));

        painelDadosFatura.setLayout(new java.awt.GridBagLayout());

        labelDataPagamento.setText("Data do pagamento:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        painelDadosFatura.add(labelDataPagamento, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 0, 0);
        painelDadosFatura.add(selecionadorData, gridBagConstraints);

        labelErroSemDataPagamento.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        labelErroSemDataPagamento.setForeground(new java.awt.Color(255, 0, 0));
        labelErroSemDataPagamento.setText("Indique a data do pagamento.");
        labelErroSemDataPagamento.setVisible(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 0);
        painelDadosFatura.add(labelErroSemDataPagamento, gridBagConstraints);

        labelQuantoPagouCada.setText("Quanto é que cada morador pagou?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        painelDadosFatura.add(labelQuantoPagouCada, gridBagConstraints);

        painelComoFoiPago.setLayout(new java.awt.GridBagLayout());

        scrollComoFoiPago.setPreferredSize(new java.awt.Dimension(382, 108));

        tabelaComoFoiPago.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Morador", "Montante pago"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaComoFoiPago.setColumnSelectionAllowed(true);
        tabelaComoFoiPago.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaComoFoiPago.setShowGrid(false);
        scrollComoFoiPago.setViewportView(tabelaComoFoiPago);
        tabelaComoFoiPago.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        painelComoFoiPago.add(scrollComoFoiPago, gridBagConstraints);

        painelTotalPago.setLayout(new java.awt.GridBagLayout());

        labelTotalPago.setText("Total: ");
        labelTotalPago.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        painelTotalPago.add(labelTotalPago, gridBagConstraints);

        labelResultadoTotalPago.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        painelTotalPago.add(labelResultadoTotalPago, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        painelComoFoiPago.add(painelTotalPago, gridBagConstraints);

        painelErrosTotalPago.setLayout(new javax.swing.OverlayLayout(painelErrosTotalPago));

        erroMontanteNegativo.setText("Os montantes pagos têm de ser não negativos.");
        erroMontanteNegativo.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        erroMontanteNegativo.setForeground(new java.awt.Color(255, 0, 0));
        erroMontanteNegativo.setVisible(false);
        painelErrosTotalPago.add(erroMontanteNegativo);

        erroTotalNulo.setText("O montante total não pode ser zero.");
        erroTotalNulo.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        erroTotalNulo.setForeground(new java.awt.Color(255, 0, 0));
        erroTotalNulo.setVisible(false);
        painelErrosTotalPago.add(erroTotalNulo);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        painelComoFoiPago.add(painelErrosTotalPago, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(3, 10, 0, 10);
        painelDadosFatura.add(painelComoFoiPago, gridBagConstraints);

        labelComoDividir.setText("Como deve ser dividido o valor total pago?");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        painelDadosFatura.add(labelComoDividir, gridBagConstraints);

        metodosDivisao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Igualmente", "Desigualmente", "Por percentagens" }));
        metodosDivisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodosDivisaoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        painelDadosFatura.add(metodosDivisao, gridBagConstraints);

        painelMetodosDivisao.setLayout(new java.awt.CardLayout());

        painelMetodoIgual.setLayout(new java.awt.GridBagLayout());

        scrollMetodoIgual.setPreferredSize(new java.awt.Dimension(382, 10));

        tabelaMetodoIgual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Morador", "Participa"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaMetodoIgual.setColumnSelectionAllowed(true);
        tabelaMetodoIgual.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollMetodoIgual.setViewportView(tabelaMetodoIgual);
        tabelaMetodoIgual.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        painelMetodoIgual.add(scrollMetodoIgual, gridBagConstraints);

        labelErroMetodoIgual.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        labelErroMetodoIgual.setForeground(new java.awt.Color(255, 0, 0));
        labelErroMetodoIgual.setText("Deve selecionar pelo menos um morador.");
        labelErroMetodoIgualOmissao.setVisible(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        painelMetodoIgual.add(labelErroMetodoIgual, gridBagConstraints);

        painelMetodosDivisao.add(painelMetodoIgual, "painelMetodoIgual");

        painelMetodoDesigual.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        painelMetodoDesigual.setLayout(new java.awt.GridBagLayout());

        scrollMetodoDesigual.setPreferredSize(new java.awt.Dimension(382, 100));

        tabelaMetodoDesigual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Morador", "Montante a pagar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaMetodoDesigual.setColumnSelectionAllowed(true);
        tabelaMetodoDesigual.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollMetodoDesigual.setViewportView(tabelaMetodoDesigual);
        tabelaMetodoDesigual.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        painelMetodoDesigual.add(scrollMetodoDesigual, gridBagConstraints);

        painelTotalMetodoDesigual.setLayout(new java.awt.GridBagLayout());

        labelTotalPagar.setText("Total: ");
        labelTotalPagar.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        painelTotalMetodoDesigual.add(labelTotalPagar, gridBagConstraints);

        labelResultadoTotalPagar.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        painelTotalMetodoDesigual.add(labelResultadoTotalPagar, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        painelMetodoDesigual.add(painelTotalMetodoDesigual, gridBagConstraints);

        painelErrosMetodoDesigual.setLayout(new javax.swing.OverlayLayout(painelErrosMetodoDesigual));

        erroMontanteNaoNegativo.setText("Os montantes pagos têm de ser não negativos.");
        erroMontanteNaoNegativo.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        erroMontanteNaoNegativo.setForeground(new java.awt.Color(255, 0, 0));
        erroMontanteNaoNegativo.setVisible(false);
        painelErrosMetodoDesigual.add(erroMontanteNaoNegativo);

        erroTotaisDiferem.setText("O total a pagar difere do total pago.");
        erroTotaisDiferem.setForeground(new java.awt.Color(255, 0, 0));
        erroTotaisDiferem.setVisible(false);
        painelErrosMetodoDesigual.add(erroTotaisDiferem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        painelMetodoDesigual.add(painelErrosMetodoDesigual, gridBagConstraints);

        painelMetodosDivisao.add(painelMetodoDesigual, "painelMetodoDesigual");

        painelMetodoPercentagens.setLayout(new java.awt.GridBagLayout());

        scrollPercentagens.setPreferredSize(new java.awt.Dimension(382, 100));

        tabelaPercentagens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Morador", "Percentagem (%)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPercentagens.setColumnSelectionAllowed(true);
        tabelaPercentagens.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        scrollPercentagens.setViewportView(tabelaPercentagens);
        tabelaPercentagens.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        painelMetodoPercentagens.add(scrollPercentagens, gridBagConstraints);

        painelErrosPercentagens.setLayout(new javax.swing.OverlayLayout(painelErrosPercentagens));

        erroTotalPercentagens.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        erroTotalPercentagens.setForeground(new java.awt.Color(255, 0, 0));
        erroTotalPercentagens.setText("O total tem de ser 100%.");
        erroTotalPercentagensOmissao.setVisible(false);
        painelErrosPercentagens.add(erroTotalPercentagens);

        erroPercentagemNegativa.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        erroPercentagemNegativa.setForeground(new java.awt.Color(255, 0, 0));
        erroPercentagemNegativa.setText("As percentagens devem ser não negativas.");
        erroPercentagemNegativaOmissao.setVisible(false);
        painelErrosPercentagens.add(erroPercentagemNegativa);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        painelMetodoPercentagens.add(painelErrosPercentagens, gridBagConstraints);

        painelPercentagemTotal.setLayout(new java.awt.GridBagLayout());

        labelPercentagemTotal.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        labelPercentagemTotal.setText("Total: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        painelPercentagemTotal.add(labelPercentagemTotal, gridBagConstraints);

        labelValorPercentagemTotal.setText("0.00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        painelPercentagemTotal.add(labelValorPercentagemTotal, gridBagConstraints);

        labelCaraterPercentagem.setText("%");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        painelPercentagemTotal.add(labelCaraterPercentagem, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        painelMetodoPercentagens.add(painelPercentagemTotal, gridBagConstraints);

        painelMetodosDivisao.add(painelMetodoPercentagens, "painelMetodoPercentagens");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 10);
        painelDadosFatura.add(painelMetodosDivisao, gridBagConstraints);

        scrollDadosFatura.setViewportView(painelDadosFatura);

        painelCartoes.add(scrollDadosFatura, "scrollDadosFatura");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(painelCartoes, gridBagConstraints);

        painelBotoes.setLayout(new javax.swing.BoxLayout(painelBotoes, javax.swing.BoxLayout.LINE_AXIS));

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });
        painelBotoes.add(botaoCancelar);

        botaoAnterior.setText("Anterior");
        botaoAnterior.setEnabled(false);
        botaoAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAnteriorActionPerformed(evt);
            }
        });
        painelBotoes.add(botaoAnterior);

        botaoSeguinte.setText("Seguinte");
        botaoSeguinte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSeguinteActionPerformed(evt);
            }
        });
        painelBotoes.add(botaoSeguinte);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 5, 0);
        getContentPane().add(painelBotoes, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAnteriorActionPerformed
        CardLayout cardLayout = (CardLayout) painelCartoes.getLayout();
        
        cardLayout.show(painelCartoes, "painelNomeDescPeriod");
        botaoAnterior.setEnabled(false);
        botaoSeguinte.setText("Seguinte");
    }//GEN-LAST:event_botaoAnteriorActionPerformed

    private void metodosDivisaoOmissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodosDivisaoOmissaoActionPerformed
        String opcao = (String) metodosDivisaoOmissao.getSelectedItem();
        CardLayout cardLayout = (CardLayout) painelMetodosDivisaoOmissao.getLayout();

        switch(opcao) {
            case "Igualmente":
                cardLayout.show(painelMetodosDivisaoOmissao, "painelMetodoIgual");
                break;
            default: // por percentagens
                cardLayout.show(painelMetodosDivisaoOmissao, "painelMetodoPercentagens");
                break;
        }
    }//GEN-LAST:event_metodosDivisaoOmissaoActionPerformed

    private void metodosDivisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodosDivisaoActionPerformed
        String opcao = (String) metodosDivisaoOmissao.getSelectedItem();
        CardLayout cardLayout = (CardLayout) painelMetodosDivisaoOmissao.getLayout();

        switch(opcao) {
            case "Igualmente":
                cardLayout.show(painelMetodosDivisaoOmissao, "painelMetodoIgual");
                break;
            case "Desigualmente":
                cardLayout.show(painelMetodosDivisaoOmissao, "painelMetodoDesigual");
                break;
            default: // por percentagens
                cardLayout.show(painelMetodosDivisaoOmissao, "painelMetodoPercentagens");
                break;
        }
    }//GEN-LAST:event_metodosDivisaoActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoSeguinteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSeguinteActionPerformed
        CardLayout cardLayout = (CardLayout) painelCartoes.getLayout();
        
        if(cartaoAtual.equals("painelNomeDescPeriod")) {
            String opcaoPeriodicidade = (String) opcoesPeriodicidade.getSelectedItem();
            
            botaoAnterior.setEnabled(true);
            botaoSeguinte.setText("Registar");
            if(opcaoPeriodicidade.equals("Pontualmente"))
                cardLayout.show(painelCartoes, "scrollDadosFatura");
            else
                cardLayout.show(painelCartoes, "painelMetodoDivisaoPorOmissao");
            
            
        } else { // MUDAR !!!
            dispose();
        }
    }//GEN-LAST:event_botaoSeguinteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTextoDescricao;
    private javax.swing.JButton botaoAnterior;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoSeguinte;
    private javax.swing.JTextField campoNomeDespesa;
    private javax.swing.JLabel erroMontanteNaoNegativo;
    private javax.swing.JLabel erroMontanteNegativo;
    private javax.swing.JLabel erroPercentagemNegativa;
    private javax.swing.JLabel erroPercentagemNegativaOmissao;
    private javax.swing.JLabel erroTotaisDiferem;
    private javax.swing.JLabel erroTotalNulo;
    private javax.swing.JLabel erroTotalPercentagens;
    private javax.swing.JLabel erroTotalPercentagensOmissao;
    private javax.swing.JLabel iconeDespesa;
    private javax.swing.JLabel labelCaraterPercentagem;
    private javax.swing.JLabel labelCaraterPercentagemOmissao;
    private javax.swing.JLabel labelComoDividir;
    private javax.swing.JLabel labelDataPagamento;
    private javax.swing.JLabel labelDescricaoDespesa;
    private javax.swing.JLabel labelDivisaoPorOmissao;
    private javax.swing.JLabel labelErroMetodoIgual;
    private javax.swing.JLabel labelErroMetodoIgualOmissao;
    private javax.swing.JLabel labelErroNomeObrigatorio;
    private javax.swing.JLabel labelErroSemDataPagamento;
    private javax.swing.JLabel labelNomeDespesa;
    private javax.swing.JLabel labelOcorre;
    private javax.swing.JLabel labelPercentagemTotal;
    private javax.swing.JLabel labelPercentagemTotalOmissao;
    private javax.swing.JLabel labelPrimeiraDataPagamento;
    private javax.swing.JLabel labelQuantoPagouCada;
    private javax.swing.JLabel labelResultadoTotalPagar;
    private javax.swing.JLabel labelResultadoTotalPago;
    private javax.swing.JLabel labelTotalPagar;
    private javax.swing.JLabel labelTotalPago;
    private javax.swing.JLabel labelValorPercentagemTotal;
    private javax.swing.JLabel labelValorPercentagemTotalOmissao;
    private javax.swing.JComboBox<String> metodosDivisao;
    private javax.swing.JComboBox<String> metodosDivisaoOmissao;
    private javax.swing.JComboBox<String> opcoesPeriodicidade;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelCartoes;
    private javax.swing.JPanel painelComoFoiPago;
    private javax.swing.JPanel painelDadosFatura;
    private javax.swing.JPanel painelErrosMetodoDesigual;
    private javax.swing.JPanel painelErrosPercentagens;
    private javax.swing.JPanel painelErrosPercentagensOmissao;
    private javax.swing.JPanel painelErrosTotalPago;
    private javax.swing.JPanel painelMetodoDesigual;
    private javax.swing.JPanel painelMetodoDivisaoPorOmissao;
    private javax.swing.JPanel painelMetodoIgual;
    private javax.swing.JPanel painelMetodoIgualOmissao;
    private javax.swing.JPanel painelMetodoPercentagens;
    private javax.swing.JPanel painelMetodoPercentagensOmissao;
    private javax.swing.JPanel painelMetodosDivisao;
    private javax.swing.JPanel painelMetodosDivisaoOmissao;
    private javax.swing.JPanel painelNomeDescPeriod;
    private javax.swing.JPanel painelPercentagemTotal;
    private javax.swing.JPanel painelPercentagemTotalOmissao;
    private javax.swing.JPanel painelTotalMetodoDesigual;
    private javax.swing.JPanel painelTotalPago;
    private javax.swing.JScrollPane scrollComoFoiPago;
    private javax.swing.JScrollPane scrollDadosFatura;
    private javax.swing.JScrollPane scrollDescricaoDespesa;
    private javax.swing.JScrollPane scrollMetodoDesigual;
    private javax.swing.JScrollPane scrollMetodoIgual;
    private javax.swing.JScrollPane scrollMetodoIgualOmissao;
    private javax.swing.JScrollPane scrollPercentagens;
    private javax.swing.JScrollPane scrollPercentagensOmissao;
    private com.github.lgooddatepicker.components.DatePicker selecionadorData;
    private com.github.lgooddatepicker.components.DatePicker selecionadorPrimeiraData;
    private javax.swing.JTable tabelaComoFoiPago;
    private javax.swing.JTable tabelaMetodoDesigual;
    private javax.swing.JTable tabelaMetodoIgual;
    private javax.swing.JTable tabelaMetodoIgualOmissao;
    private javax.swing.JTable tabelaPercentagens;
    private javax.swing.JTable tabelaPercentagensOmissao;
    // End of variables declaration//GEN-END:variables
}
